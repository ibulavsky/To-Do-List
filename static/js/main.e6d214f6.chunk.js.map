{"version":3,"sources":["ui/listsContent/wishesList/ListHeader/listHeader.module.css","ui/listsContent/wishesList/ListFooter/listFooter.module.css","ui/common/AddForm.jsx","bll/ListsReducer.js","ui/common/validateForm.js","ui/header/addListsForm/AddListsFormContainer.jsx","ui/header/HeaderPage.jsx","ui/listsContent/wishesList/ListContent/Wish.jsx","ui/listsContent/wishesList/ListHeader/ListHeader.jsx","ui/listsContent/wishesList/ListFooter/ListFooter.jsx","ui/listsContent/wishesList/ListWrapper.jsx","ui/listsContent/WishesListsContainer.jsx","ui/common/useLocalStorage.js","Main.jsx","bll/store.js","App.js","serviceWorker.js","index.js","ui/listsContent/wishesList/ListContent/Wish.module.css","ui/listsContent/wishesList/listWrapper.module.css"],"names":["module","exports","AddForm","itemName","item","onChangeItemName","addItem","value","placeholder","onChange","onPressEnter","style","width","marginRight","key","marginLeft","onClick","RESTORE_STATE","ADD_WISHLIST","DELETE_WISHLIST","UPDATE_WISHLIST","ADD_WISH","DELETE_WISH","UPDATE_WISH","initialState","wishesLists","listsReducer","state","action","type","restoredWishesList","newWishesList","filter","wl","id","wishesListId","map","payload","l","listId","wishes","newWish","w","wishId","addWishesList","updateWish","validateItem","length","match","AddListsFormContainer","useState","changeItemName","errorMessage","setError","dispatch","useDispatch","addFormCallbacks","newWishList","name","Date","e","currentTarget","message","margin","description","closable","showIcon","HeaderPage","config","extra","border","padding","title","subTitle","Wish","wishItem","isChangeModeShow","setChangeModeShow","wishTitle","changeWishTitle","Option","Select","useEffect","onUpdateWish","className","styles","listContainer","inputContainer","marginBottom","autoFocus","icon","check","checked","status","target","onChangeWishStatus","text","defaultValue","priority","console","log","onPriorityChange","placement","onConfirm","deleteWish","okText","cancelText","ListHeader","props","wishName","changeWish","addWish","listHeader","ListFooter","filterValue","changeFilter","isHidden","hide","typeForAll","typeForCompleted","typeForActive","listFooter","code","ListWrapper","isInputShow","setInputShow","listTitle","changeListTitle","myWishes","changeWishes","updateList","container","titleWrap","header","footer","bordered","dataSource","renderItem","Item","WishesListsContainer","lists","useSelector","store","initialValue","localStorage","getItem","JSON","parse","error","storedValue","setStoredValue","valueToStore","Function","setItem","stringify","useLocalStorage","setLists","listsArr","display","flexWrap","justifyContent","Main","reducers","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","ThunkMiddleware","App","Boolean","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e6d214f6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"listHeader\":\"listHeader_listHeader__2kj4D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listFooter\":\"listFooter_listFooter__3Xo6e\"};","import {Button, Input} from \"antd\"\r\nimport React from \"react\"\r\n\r\nconst AddForm = ({itemName, item, onChangeItemName, addItem}) => {\r\n\r\n    return (\r\n        <>\r\n            <Input value={itemName}\r\n                   placeholder={`Write ${item} name here`}\r\n                   onChange={onChangeItemName}\r\n                   onPressEnter={addItem}\r\n                   style={{width: '200px', marginRight: '20px'}}/>\r\n            <Button key=\"1\" style={{marginLeft: '8px'}} onClick={addItem}>Add {item}</Button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddForm\r\n","const RESTORE_STATE = 'wishesListsAPP/ListsReducer/RESTORE_STATE';\r\nconst ADD_WISHLIST = 'wishesListsAPP/ListsReducer/ADD_WISHLIST';\r\nconst DELETE_WISHLIST = 'wishesListsAPP/ListsReducer/DELETE_WISHLIST';\r\nconst UPDATE_WISHLIST = 'wishesListsAPP/ListsReducer/UPDATE_WISHLIST';\r\nconst ADD_WISH = 'wishesListsAPP/ListsReducer/ADD_WISH';\r\nconst DELETE_WISH = 'wishesListsAPP/ListsReducer/DELETE_WISH';\r\nconst UPDATE_WISH = 'wishesListsAPP/ListsReducer/UPDATE_WISH';\r\n\r\n\r\nlet initialState = {\r\n    wishesLists: [\r\n        //     {\r\n        //     name: 'ListTOP',\r\n        //     id: 1,\r\n        //     wishes: [{title: 'Wish', priority: 2, status: false, id: 1}\r\n        //     ]\r\n        // }\r\n    ],\r\n}\r\n\r\nconst listsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case RESTORE_STATE:\r\n            return {\r\n                ...state,\r\n                wishesLists: [...action.restoredWishesList, ...state.wishesLists],\r\n            };\r\n        case ADD_WISHLIST:\r\n            return {\r\n                ...state,\r\n                wishesLists: [action.newWishesList, ...state.wishesLists],\r\n            };\r\n        case DELETE_WISHLIST:\r\n            return {\r\n                ...state,\r\n                wishesLists: state.wishesLists.filter(wl => {\r\n                    if (wl.id !== action.wishesListId) {\r\n                        return true\r\n                    } else {\r\n                        return false\r\n                    }\r\n                })\r\n            };\r\n        case UPDATE_WISHLIST:\r\n            return {\r\n                ...state,\r\n                wishesLists: state.wishesLists.map(wl => {\r\n                    if (wl.id === action.wishesListId) {\r\n                        return {...wl, ...action.payload}\r\n                    }\r\n                    return wl\r\n                })\r\n            };\r\n        case ADD_WISH:\r\n            return {\r\n                ...state,\r\n                wishesLists: state.wishesLists.map(l => {\r\n                    if (l.id === action.listId) {\r\n                        return {\r\n                            ...l, wishes: [action.newWish, ...l.wishes]\r\n                        }\r\n                    } else {\r\n                        return l\r\n                    }\r\n                }),\r\n            };\r\n        case DELETE_WISH:\r\n            return {\r\n                ...state,\r\n                wishesLists: state.wishesLists.map(l => {\r\n                    if (l.id === action.listId) {\r\n                        return {\r\n                            ...l, wishes: l.wishes.filter(w => {\r\n                                if (w.id !== action.wishId) {\r\n                                    return true\r\n                                }\r\n                                return false\r\n                            })\r\n                        }\r\n                    }\r\n                    return l\r\n                })\r\n            };\r\n        case UPDATE_WISH:\r\n            return {\r\n                ...state,\r\n                wishesLists: state.wishesLists.map(l => {\r\n                        if (l.id === action.listId) {\r\n                            return {\r\n                                ...l, wishes: l.wishes.map(w => {\r\n                                    if (w.id === action.wishId) {\r\n                                        return {...w, ...action.payload}\r\n                                    }\r\n                                    return w\r\n                                })\r\n                            }\r\n                        }\r\n                        return l\r\n                    }\r\n                )\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default listsReducer\r\n\r\nexport const restoreStateList = restoredWishesList => ({type: RESTORE_STATE, restoredWishesList})\r\nexport const addWishesList = newWishesList => ({type: ADD_WISHLIST, newWishesList})\r\nexport const deleteWishesList = wishesListId => ({type: DELETE_WISHLIST, wishesListId})\r\nexport const updateWishesList = (wishesListId, payload) => ({type: UPDATE_WISHLIST, wishesListId, payload})\r\nexport const addWish = (newWish, listId) => ({type: ADD_WISH, newWish, listId})\r\nexport const deleteWish = (listId, wishId) => ({type: DELETE_WISH, listId, wishId})\r\nexport const updateWish = (listId, wishId, payload) => ({type: UPDATE_WISH, listId, wishId, payload})\r\n","export const validateItem = (itemName) => {\r\n    if (itemName.length < 1 || itemName.match(/^\\s+$/)) {\r\n        return 'Cannot be empty.'\r\n    }\r\n    if (itemName.length > 30) {\r\n        return 'Cannot be longer than 30 characters'\r\n    }\r\n    return null\r\n}\r\n","import React, {useState} from \"react\"\r\nimport AddForm from \"../../common/AddForm\"\r\nimport {useDispatch} from \"react-redux\"\r\nimport {addWishesList} from \"../../../bll/ListsReducer\"\r\nimport {validateItem} from \"../../common/validateForm\"\r\nimport {Alert} from \"antd\"\r\n\r\nconst AddListsFormContainer = () => {\r\n\r\n    const [itemName, changeItemName] = useState('')\r\n    const [errorMessage, setError] = useState(null)\r\n    const dispatch = useDispatch()\r\n\r\n    const addFormCallbacks = {\r\n        addItem: () => {\r\n            if (validateItem(itemName)) {\r\n                setError(validateItem(itemName))\r\n            } else {\r\n                const newWishList = [{\r\n                    name: itemName,\r\n                    wishes: [],\r\n                    id: +new Date()\r\n                }]\r\n                dispatch(addWishesList(...newWishList)\r\n                )\r\n                changeItemName('')\r\n            }\r\n        },\r\n        onChangeItemName: (e) => {\r\n            setError(null)\r\n            changeItemName(e.currentTarget.value)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            {errorMessage && <Alert\r\n                message={null}\r\n                style={{width: '307px', margin: '8px 0 8px 8px'}}\r\n                description={errorMessage}\r\n                type=\"warning\"\r\n                closable\r\n                showIcon\r\n            />}\r\n            <AddForm item={'list'} itemName={itemName} {...addFormCallbacks} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddListsFormContainer\r\n","import React from \"react\";\r\nimport AddFormContainer from \"./addListsForm/AddListsFormContainer\"\r\nimport {PageHeader} from \"antd\"\r\n\r\nconst HeaderPage = () => {\r\n\r\n    const stylesAnt = {\r\n        border: '1px solid rgb(235, 237, 240)',\r\n        padding: '24px',\r\n    }\r\n\r\n    const config = {\r\n        extra: [<AddFormContainer/>]\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <PageHeader style={stylesAnt}\r\n                        title={'My wish lists'}\r\n                        subTitle={'What are you wanna from Santa?'}\r\n                        {...config}/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HeaderPage\r\n","import React, {useEffect, useState} from \"react\"\r\nimport {Alert, Button, Checkbox, Icon, Input, Popconfirm, Select} from 'antd'\r\nimport styles from './Wish.module.css'\r\nimport {useDispatch} from \"react-redux\"\r\nimport {deleteWish, updateWish} from \"../../../../bll/ListsReducer\"\r\nimport {validateItem} from \"../../../common/validateForm\"\r\n\r\nconst Wish = ({wishItem, listId}) => {\r\n\r\n    const [isChangeModeShow, setChangeModeShow] = useState(false)\r\n    const [wishTitle, changeWishTitle] = useState(wishItem.title)\r\n    const [errorMessage, setError] = useState(null)\r\n    const {Option} = Select;\r\n    // console.log(`checked ${props.item.id} ${props.item.title} - ${props.item.priority} `)\r\n\r\n    const text = 'Are you sure to delete this wish?'\r\n\r\n    useEffect(() => {\r\n        changeWishTitle(wishItem.title)\r\n    }, [wishItem.title])\r\n\r\n//redux\r\n    const dispatch = useDispatch();\r\n\r\n    const onPriorityChange = (value) => {\r\n        dispatch(updateWish(listId, wishItem.id, {priority: value}))\r\n        console.log(`priority selected ${value} - id ${wishItem.id}`);\r\n    }\r\n    const onUpdateWish = () => {\r\n        if (validateItem(wishTitle)) {\r\n            setError(validateItem(wishTitle))\r\n        } else {\r\n            dispatch(updateWish(listId, wishItem.id, {title: wishTitle}))\r\n            setChangeModeShow(false)\r\n        }\r\n    }\r\n    const onDeleteWish = () => dispatch(deleteWish(listId, wishItem.id))\r\n    const onChangeWishStatus = (e) => {\r\n        dispatch(updateWish(listId, wishItem.id, {status: (e.target.checked)}))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <span className={styles.listContainer}>\r\n                               {isChangeModeShow ? <>\r\n                     <span className={styles.inputContainer}>\r\n                        {errorMessage &&\r\n                        <Alert\r\n                            message={null}\r\n                            style={{width: '100%', marginBottom: '8px'}}\r\n                            description={errorMessage}\r\n                            type=\"warning\"\r\n                            closable\r\n                            showIcon\r\n                        />\r\n                        }\r\n                         <Input placeholder=\"Wish name\" value={wishTitle}\r\n                                autoFocus\r\n                                onChange={(e) => {\r\n                                    setError(null)\r\n                                    changeWishTitle(e.currentTarget.value)\r\n                                }}\r\n                                onPressEnter={onUpdateWish}/>\r\n                            </span>\r\n                                       <Icon type=\"check-circle\" className={styles.icon} onClick={onUpdateWish}/>\r\n                                       <Icon type=\"undo\" className={styles.icon} onClick={() => {\r\n                                           setError(null)\r\n                                           setChangeModeShow(false)\r\n                                       }}/>\r\n                                   </>\r\n                                   : <>\r\n                                       <Checkbox className={styles.check} checked={wishItem.status}\r\n                                                 onChange={(e) => onChangeWishStatus(e)}> </Checkbox>\r\n                                       <article className={styles.text}>\r\n                                           {wishItem.title}\r\n                                       </article>\r\n                                       <Select defaultValue={wishItem.priority} style={{width: 120}}\r\n                                               className={styles.priority}\r\n                                               onChange={(value) => onPriorityChange(value)}>\r\n                                           <Option value={3}>High</Option>\r\n                                           <Option value={2}>Medium</Option>\r\n                                           <Option value={1}>Low</Option>\r\n                                       </Select>\r\n                                       <Icon type=\"edit\" className={styles.icon}\r\n                                             onClick={() => setChangeModeShow(true)}/>\r\n                                       <Popconfirm placement=\"right\" title={text} onConfirm={onDeleteWish} okText=\"Yes\"\r\n                                                   cancelText=\"No\">\r\n                                           <Icon type=\"delete\" className={styles.icon}/>\r\n                                       </Popconfirm>\r\n                                   </>\r\n                               }\r\n                </span>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Wish\r\n","import React, {useState} from \"react\"\r\nimport AddForm from \"../../../common/AddForm\"\r\nimport {useDispatch} from \"react-redux\"\r\nimport {addWish} from \"../../../../bll/ListsReducer\"\r\nimport styles from './listHeader.module.css'\r\nimport {Alert} from \"antd\"\r\nimport {validateItem} from \"../../../common/validateForm\"\r\n\r\nconst ListHeader = (props) => {\r\n    const [errorMessage, setError] = useState(null)\r\n    const [wishName, changeWish] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const addFormCallbacks = {\r\n        addItem: () => {\r\n            if (validateItem(wishName)) {\r\n                setError(validateItem(wishName))\r\n            } else {\r\n                const newWish = {\r\n                    title: wishName,\r\n                    priority: 2,\r\n                    id: +new Date()\r\n                };\r\n                dispatch(addWish(newWish, props.listId));\r\n                changeWish('')\r\n            }\r\n        },\r\n        onChangeItemName: (e) => {\r\n            setError(null)\r\n            changeWish(e.currentTarget.value)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {errorMessage && <Alert\r\n                message={null}\r\n                style={{width: '307px', margin: '8px 0 8px 8px'}}\r\n                description={errorMessage}\r\n                type=\"warning\"\r\n                closable\r\n                showIcon\r\n            />\r\n            }\r\n            <div className={styles.listHeader}>\r\n                <AddForm item={'wish'} itemName={wishName} {...addFormCallbacks} />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ListHeader\r\n","import React, {useState} from 'react';\r\nimport {Button, Icon, Typography} from \"antd\"\r\nimport styles from './listFooter.module.css'\r\n\r\nconst ListFooter = ({filterValue, changeFilter}) => {\r\n\r\n    const [isHidden, hide] = useState(false)\r\n\r\n    const onAllFilterClick = () => {\r\n        changeFilter(\"All\")\r\n    }\r\n    const onCompletedFilterClick = () => {\r\n        changeFilter(\"Completed\")\r\n    }\r\n    const onActiveFilterClick = () => {\r\n        changeFilter(\"Active\")\r\n    }\r\n\r\n    const onShowFiltersClick = () => {\r\n        hide(true)\r\n    }\r\n    const onHideFiltersClick = () => {\r\n        hide(false)\r\n    }\r\n\r\n\r\n    let typeForAll = filterValue === \"All\" ? \"primary\" : \"\";\r\n    let typeForCompleted = filterValue === \"Completed\" ? \"primary\" : \"\";\r\n    let typeForActive = filterValue === \"Active\" ? \"primary\" : \"\";\r\n\r\n    return (\r\n        <div className={styles.listFooter}>\r\n            {!isHidden && <div>\r\n                <Button key=\"11\" onClick={onAllFilterClick} type={typeForAll}>ALL</Button>\r\n                <Button key=\"12\" onClick={onCompletedFilterClick} type={typeForCompleted}>Completed</Button>\r\n                <Button key=\"13\" onClick={onActiveFilterClick} type={typeForActive}>Active</Button>\r\n            </div>\r\n            }\r\n            {!isHidden && <span onClick={onShowFiltersClick}>\r\n                    <Icon type=\"backward\"/>\r\n                    <Typography code>hide</Typography>\r\n                </span>}\r\n            {isHidden && <span onClick={onHideFiltersClick}> <Icon type=\"forward\"/>\r\n                    <Typography code>show</Typography> </span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListFooter\r\n","import {Alert, Button, Icon, Input, List, Popconfirm} from \"antd\"\r\nimport React, {useEffect, useState} from \"react\"\r\nimport Wish from \"./ListContent/Wish\"\r\nimport ListHeader from \"./ListHeader/ListHeader\"\r\nimport ListFooter from \"./ListFooter/ListFooter\"\r\nimport styles from './listWrapper.module.css'\r\nimport {useDispatch} from \"react-redux\"\r\nimport {deleteWishesList, updateWishesList} from \"../../../bll/ListsReducer\"\r\nimport {validateItem} from \"../../common/validateForm\"\r\n\r\nconst ListWrapper = ({l, ...props}) => {\r\n    const [isInputShow, setInputShow] = useState(false)\r\n    const [listTitle, changeListTitle] = useState(l.name)\r\n    const [filterValue, changeFilter] = useState(\"All\")\r\n    const [myWishes, changeWishes] = useState(l.wishes)\r\n    const [errorMessage, setError] = useState(null)\r\n\r\n    const text = 'Are you sure to delete this list?'\r\n\r\n    const onChangeFilter = (filter) => {\r\n        changeFilter(filter)\r\n    }\r\n\r\n    const wishes = myWishes.filter(w => {\r\n        switch (filterValue) {\r\n            case \"All\":\r\n                return true;\r\n            case \"Active\":\r\n                return !w.status;\r\n            case \"Completed\":\r\n                return w.status;\r\n            default:\r\n                return true\r\n        }\r\n    })\r\n\r\n    const dispatch = useDispatch()\r\n    // component did update\r\n    useEffect(() => {\r\n        changeWishes(l.wishes)\r\n    }, [l.wishes])\r\n\r\n    useEffect(() => {\r\n        changeListTitle(l.name)\r\n    }, [l.name])\r\n\r\n    const deleteList = () => {\r\n        dispatch(deleteWishesList(l.id))\r\n    }\r\n\r\n    const updateList = () => {\r\n        if (validateItem(listTitle)) {\r\n            setError(validateItem(listTitle))\r\n        } else {\r\n            dispatch(updateWishesList(l.id, {name: listTitle}))\r\n            setInputShow(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={styles.container}>\r\n                <header className={styles.titleWrap}>\r\n                    {isInputShow ? <>\r\n                        <span className={styles.inputContainer}>\r\n                            {errorMessage &&\r\n                            <Alert\r\n                                message={null}\r\n                                style={{width: '100%', marginBottom: '8px'}}\r\n                                description={errorMessage}\r\n                                type=\"warning\"\r\n                                closable\r\n                                showIcon\r\n                            />}\r\n                            <Input placeholder=\"List name\" value={listTitle}\r\n                                   autoFocus\r\n                                   onChange={(e) => {\r\n                                       setError(null)\r\n                                       changeListTitle(e.currentTarget.value)\r\n                                   }}\r\n                                   onPressEnter={updateList}\r\n                            />\r\n                        </span>\r\n                            <Icon type=\"check-circle\" className={styles.icon} onClick={updateList}/>\r\n                            <Icon type=\"undo\" className={styles.icon} onClick={() => {\r\n                                setError(null)\r\n                                setInputShow(false)\r\n                            }}/>\r\n                        </>\r\n                        : <>\r\n                            <h3 className={styles.title} style={{}}>{`${l.name}`}</h3>\r\n                            <Icon type=\"edit\" className={styles.icon} onClick={() => setInputShow(true)}/>\r\n                            <Popconfirm placement=\"right\" title={text} onConfirm={deleteList} okText=\"Yes\"\r\n                                        cancelText=\"No\">\r\n                                <Icon type=\"delete\" className={styles.icon}/>\r\n                            </Popconfirm>\r\n\r\n                        </>\r\n                    }\r\n                </header>\r\n                <List\r\n                    header={<ListHeader listId={l.id}/>}\r\n                    footer={<ListFooter filterValue={filterValue} changeFilter={onChangeFilter}/>}\r\n                    bordered\r\n                    dataSource={wishes}\r\n                    renderItem={item => (\r\n                        <List.Item>\r\n                            <Wish listId={l.id} wishItem={item}/>\r\n                        </List.Item>\r\n                    )}\r\n                />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ListWrapper\r\n","import React, {useEffect} from \"react\"\r\nimport ListWrapper from \"./wishesList/ListWrapper\"\r\nimport {useDispatch, useSelector} from \"react-redux\"\r\nimport {useLocalStorage} from \"../common/useLocalStorage\"\r\nimport {restoreStateList} from \"../../bll/ListsReducer\"\r\n\r\nconst WishesListsContainer = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const lists = useSelector((store) => store.lists.wishesLists)\r\n\r\n    const [wishesLists, setLists] = useLocalStorage('Lists', lists)\r\n\r\n    useEffect(() => {\r\n        dispatch(restoreStateList(wishesLists))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        setLists(lists)\r\n    })\r\n\r\n    const listsArr = wishesLists.map((l) => {\r\n        if (l) {\r\n            return <ListWrapper key={l.id} l={l}/>\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div style={{display: 'flex', flexWrap: 'wrap', justifyContent: 'space-around'}}>\r\n            {listsArr}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WishesListsContainer\r\n","import {useState} from 'react';\r\n\r\n// Hook\r\nexport const useLocalStorage = (key, initialValue) => {\r\n\r\n    const [storedValue, setStoredValue] = useState(() => {\r\n        try {\r\n            const item = localStorage.getItem(key);\r\n            return item ? JSON.parse(item) : initialValue;\r\n        } catch (error) {\r\n            console.log(error);\r\n            return initialValue;\r\n        }\r\n    });\r\n\r\n    const setValue = value => {\r\n        try {\r\n            const valueToStore = value instanceof Function ? value(storedValue) : value;\r\n            setStoredValue(valueToStore);\r\n            localStorage.setItem(key, JSON.stringify(valueToStore));\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n    return [storedValue, setValue];\r\n}\r\n","import React from \"react\";\r\nimport HeaderPage from \"./ui/header/HeaderPage\"\r\nimport {Layout} from \"antd\"\r\nimport WishesListsContainer from \"./ui/listsContent/WishesListsContainer\"\r\n\r\nconst Main = () => {\r\n    return (\r\n        <>\r\n            <Layout>\r\n                <HeaderPage/>\r\n                <WishesListsContainer/>\r\n            </Layout>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Main\r\n","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport ThunkMiddleware from 'redux-thunk'\r\nimport listsReducer from \"./ListsReducer\";\r\n\r\n\r\n// пока у меня будет один редьюсер,\r\n// но оставляю возможность для расширения\r\nlet reducers = combineReducers({\r\n    lists: listsReducer,\r\n});\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\nlet store = createStore(reducers, composeEnhancers(applyMiddleware(ThunkMiddleware)));\r\nexport default store;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Main from \"./Main\"\r\nimport store from \"./bll/store\"\r\nimport {Provider} from \"react-redux\"\r\n\r\nfunction App() {\r\n    return (\r\n        <Provider store={store}>\r\n            <div className=\"App\">\r\n                <Main/>\r\n            </div>\r\n        </Provider>\r\n\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listContainer\":\"Wish_listContainer__26yNw\",\"inputContainer\":\"Wish_inputContainer__YECVE\",\"check\":\"Wish_check__2Vsty\",\"text\":\"Wish_text__3DwDO\",\"priority\":\"Wish_priority__3XuCW\",\"icon\":\"Wish_icon__5zg9m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"listWrapper_container__1yUpu\",\"inputContainer\":\"listWrapper_inputContainer__2RMmP\",\"titleWrap\":\"listWrapper_titleWrap__3ynYb\",\"title\":\"listWrapper_title__3c0tH\",\"icon\":\"listWrapper_icon__2-bpG\"};"],"sourceRoot":""}